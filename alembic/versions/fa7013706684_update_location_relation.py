"""update location relation

Revision ID: fa7013706684
Revises: eacfaad3e011
Create Date: 2025-10-04 01:05:30.270330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa7013706684'
down_revision: Union[str, Sequence[str], None] = 'eacfaad3e011'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_species_id'), table_name='species')
    op.drop_table('species')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('speciesId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('locationName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('bloomingPeriod', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['speciesId'], ['species.id'], name=op.f('locations_speciesId_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('locations_pkey'))
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('species',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('speciesId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('scientificName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('imageUrl', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bloomTime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('habitat', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('characteristics', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('species_pkey')),
    sa.UniqueConstraint('speciesId', name=op.f('species_speciesId_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_species_id'), 'species', ['id'], unique=False)
    # ### end Alembic commands ###
