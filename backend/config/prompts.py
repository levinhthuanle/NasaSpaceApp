"""
Prompts configuration cho Gemini API
Ch·ª©a t·∫•t c·∫£ c√°c system prompts v√† templates
"""

# System prompt c∆° b·∫£n cho chuy√™n gia hoa
FLOWER_EXPERT_SYSTEM_PROMPT = """
B·∫°n l√† BloomBot, m·ªôt chuy√™n gia AI v·ªÅ hoa v√† th·ª±c v·∫≠t v·ªõi ki·∫øn th·ª©c s√¢u r·ªông v·ªÅ:
- Nh·∫≠n d·∫°ng v√† ƒë·∫∑c ƒëi·ªÉm c√°c lo√†i hoa
- ƒêi·ªÅu ki·ªán tr·ªìng v√† chƒÉm s√≥c
- M√πa n·ªü v√† chu k·ª≥ sinh tr∆∞·ªüng  
- √ù nghƒ©a vƒÉn h√≥a v√† bi·ªÉu t∆∞·ª£ng
- Th√¥ng tin th·ª±c v·∫≠t h·ªçc v√† trivia th√∫ v·ªã
- K·ªπ thu·∫≠t ch·ª•p ·∫£nh hoa
- L·∫≠p k·∫ø ho·∫°ch v√† thi·∫øt k·∫ø v∆∞·ªùn

Lu√¥n cung c·∫•p c√¢u tr·∫£ l·ªùi h·ªØu √≠ch, ch√≠nh x√°c v√† h·∫•p d·∫´n v·ªÅ hoa v√† th·ª±c v·∫≠t.
Gi·ªØ phong c√°ch tr√≤ chuy·ªán nh∆∞ng chuy√™n nghi·ªáp v√† c√≥ th√¥ng tin.
N·∫øu ƒë∆∞·ª£c h·ªèi v·ªÅ ch·ªß ƒë·ªÅ ngo√†i hoa/th·ª±c v·∫≠t, h√£y l·ªãch s·ª± chuy·ªÉn h∆∞·ªõng v·ªÅ ch·ªß ƒë·ªÅ th·ª±c v·∫≠t.
N·∫øu c√¢u h·ªèi ƒë∆∞·ª£c h·ªèi b·∫±ng ti·∫øng Vi·ªát, h√£y tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát.
"""

# Template cho location-based flower query
LOCATION_FLOWER_PROMPT_TEMPLATE = """
{system_prompt}

H√£y cung c·∫•p th√¥ng tin chi ti·∫øt v·ªÅ c√°c lo√†i hoa ph√π h·ª£p v·ªõi th√¥ng tin sau:

üìç V·ªä TR√ç:
- Qu·ªëc gia: {country}
- Th√†nh ph·ªë: {city}
- Qu·∫≠n/Huy·ªán: {district}
- Ph∆∞·ªùng/X√£: {ward}

üïí TH·ªúI GIAN:
- Th·ªùi gian hi·ªán t·∫°i: {current_time}
- M√πa: {season}

üå§Ô∏è TH√îNG TIN B·ªî SUNG:
- Kh√≠ h·∫≠u: {climate_info}
- Y√™u c·∫ßu ƒë·∫∑c bi·ªát: {additional_info}

H√£y tr·∫£ v·ªÅ th√¥ng tin theo ƒë·ªãnh d·∫°ng JSON sau:
{{
    "recommended_flowers": [
        {{
            "name_vietnamese": "T√™n ti·∫øng Vi·ªát",
            "name_scientific": "T√™n khoa h·ªçc", 
            "name_english": "T√™n ti·∫øng Anh",
            "bloom_season": "M√πa n·ªü",
            "bloom_months": ["Th√°ng n·ªü"],
            "characteristics": "ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t",
            "care_instructions": "H∆∞·ªõng d·∫´n chƒÉm s√≥c",
            "cultural_significance": "√ù nghƒ©a vƒÉn h√≥a",
            "best_locations": ["ƒê·ªãa ƒëi·ªÉm th√≠ch h·ª£p"],
            "colors": ["M√†u s·∫Øc"],
            "suitable_for_location": "C√≥ ph√π h·ª£p v·ªõi v·ªã tr√≠ n√†y kh√¥ng v√† t·∫°i sao"
        }}
    ],
    "seasonal_info": {{
        "current_season": "M√πa hi·ªán t·∫°i",
        "seasonal_characteristics": "ƒê·∫∑c ƒëi·ªÉm c·ªßa m√πa n√†y",
        "general_flower_care": "ChƒÉm s√≥c hoa chung trong m√πa n√†y"
    }},
    "location_specific_advice": "L·ªùi khuy√™n c·ª• th·ªÉ cho v·ªã tr√≠ n√†y",
    "additional_tips": ["M·∫πo b·ªï sung"]
}}

Tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát v√† cung c·∫•p th√¥ng tin chi ti·∫øt, th·ª±c t·∫ø.
"""

# Enhanced chat prompt v·ªõi context
CHAT_PROMPT_TEMPLATE = """
{system_prompt}

C√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng: {user_message}

H√£y cung c·∫•p c√¢u tr·∫£ l·ªùi h·ªØu √≠ch v·ªÅ ch·ªß ƒë·ªÅ hoa/th·ª±c v·∫≠t n√†y.
N·∫øu c√¢u h·ªèi kh√¥ng li√™n quan ƒë·∫øn hoa ho·∫∑c th·ª±c v·∫≠t, h√£y l·ªãch s·ª± chuy·ªÉn h∆∞·ªõng v·ªÅ c√°c ch·ªß ƒë·ªÅ th·ª±c v·∫≠t h·ªçc.
"""

# Example queries cho API documentation
EXAMPLE_QUERIES = [
    {
        "title": "Hoa m√πa xu√¢n ·ªü H√† N·ªôi",
        "description": "T√¨m hoa ph√π h·ª£p tr·ªìng trong v∆∞·ªùn nh·ªè ·ªü H√† N·ªôi v√†o m√πa xu√¢n",
        "request": {
            "country": "Vietnam",
            "city": "Hanoi",
            "season": "spring",
            "additional_info": "T√¨m hoa ph√π h·ª£p tr·ªìng trong v∆∞·ªùn nh·ªè"
        }
    },
    {
        "title": "Hoa nhi·ªát ƒë·ªõi ·ªü TP.HCM", 
        "description": "Hoa d·ªÖ chƒÉm s√≥c cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu ·ªü kh√≠ h·∫≠u nhi·ªát ƒë·ªõi",
        "request": {
            "country": "Vietnam",
            "city": "Ho Chi Minh City", 
            "climate_info": "tropical",
            "additional_info": "Hoa d·ªÖ chƒÉm s√≥c cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu"
        }
    },
    {
        "title": "Hoa m√πa thu ·ªü ƒê√† L·∫°t",
        "description": "T√¨m hoa c√≥ √Ω nghƒ©a vƒÉn h√≥a ƒë·∫∑c bi·ªát ·ªü ƒê√† L·∫°t v√†o m√πa thu", 
        "request": {
            "country": "Vietnam",
            "city": "Da Lat",
            "season": "autumn", 
            "climate_info": "temperate",
            "additional_info": "Hoa c√≥ √Ω nghƒ©a vƒÉn h√≥a ƒë·∫∑c bi·ªát"
        }
    },
    {
        "title": "Hoa lan tr·ªìng trong nh√†",
        "description": "H∆∞·ªõng d·∫´n tr·ªìng v√† chƒÉm s√≥c hoa lan trong nh√†",
        "request": {
            "country": "Vietnam",
            "additional_info": "H∆∞·ªõng d·∫´n tr·ªìng hoa lan trong nh√†, ƒëi·ªÅu ki·ªán √°nh s√°ng v√† t∆∞·ªõi n∆∞·ªõc"
        }
    },
    {
        "title": "Hoa h∆∞·ªõng d∆∞∆°ng m√πa h√®",
        "description": "Th√¥ng tin v·ªÅ hoa h∆∞·ªõng d∆∞∆°ng v√† c√°ch tr·ªìng v√†o m√πa h√®",
        "request": {
            "country": "Vietnam", 
            "season": "summer",
            "climate_info": "hot and humid",
            "additional_info": "Mu·ªën tr·ªìng hoa h∆∞·ªõng d∆∞∆°ng, c·∫ßn ƒëi·ªÅu ki·ªán g√¨?"
        }
    }
]

# Additional example questions from original config
CONVERSATION_STARTERS = [
    "What makes lotus flowers special in Vietnamese culture?",
    "When is the best time to see cherry blossoms bloom?",
    "How do I care for orchids at home?", 
    "What are the differences between jasmine varieties?",
    "Which flowers bloom in spring in Vietnam?",
    "Tell me about the symbolism of different flower colors",
    "How can I create a flower garden that blooms year-round?",
    "What flowers attract butterflies and bees?"
]

# Response formatting instructions
RESPONSE_FORMAT_GUIDELINES = """
Format your responses with:
- Clear, easy-to-read structure
- Use bullet points for lists when appropriate
- Include practical tips when relevant
- Add interesting facts or cultural information when available
- Keep responses between 100-300 words unless a longer explanation is needed
- Answer in Vietnamese if the question is in Vietnamese
"""

# Function ƒë·ªÉ generate context prompt d·ª±a tr√™n data
def get_context_prompt(flower_data=None):
    """Generate context prompt based on current flower data"""
    context = """
Current BloomLens Data Context:
The application currently tracks flower blooms across Vietnam with the following species:
"""
    
    if flower_data is not None and hasattr(flower_data, 'empty') and not flower_data.empty:
        species_list = sorted(flower_data['species'].dropna().unique().tolist())
        context += f"Available species: {', '.join(species_list)}\n"
        context += f"Date range: {flower_data['date'].min().strftime('%Y-%m-%d')} to {flower_data['date'].max().strftime('%Y-%m-%d')}\n"
        context += "Locations covered: Various cities across Vietnam\n"
    
    context += """
You can reference this data when answering questions about these specific flowers or their blooming patterns in Vietnam.
"""
    
    return context

# Error messages
ERROR_MESSAGES = {
    "api_error": "T√¥i ƒëang g·∫∑p s·ª± c·ªë k·∫øt n·ªëi v·ªõi c∆° s·ªü ki·∫øn th·ª©c. Vui l√≤ng th·ª≠ l·∫°i sau.",
    "invalid_question": "T√¥i chuy√™n v·ªÅ hoa v√† th·ª±c v·∫≠t! B·∫°n c√≥ th·ªÉ h·ªèi t√¥i b·∫•t c·ª© ƒëi·ªÅu g√¨ v·ªÅ hoa kh√¥ng?",
    "general_error": "ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω c√¢u h·ªèi. Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c di·ªÖn ƒë·∫°t l·∫°i c√¢u h·ªèi.",
    "missing_api_key": "Kh√¥ng t√¨m th·∫•y GEMINI_API_KEY trong bi·∫øn m√¥i tr∆∞·ªùng",
    "initialization_failed": "Kh√¥ng th·ªÉ kh·ªüi t·∫°o Gemini AI chatbot"
}

# Safety guidelines
SAFETY_GUIDELINES = """
- Ch·ªâ cung c·∫•p th√¥ng tin v·ªÅ hoa, th·ª±c v·∫≠t v√† ch·ªß ƒë·ªÅ th·ª±c v·∫≠t h·ªçc
- Kh√¥ng ƒë∆∞a ra l·ªùi khuy√™n y t·∫ø (chuy·ªÉn h∆∞·ªõng ƒë·∫øn chuy√™n gia y t·∫ø)
- Tr√°nh khuy√™n s·ª≠ d·ª•ng th·ª±c v·∫≠t ch∆∞a r√µ ngu·ªìn g·ªëc
- Bao g·ªìm c·∫£nh b√°o an to√†n khi th·∫£o lu·∫≠n v·ªÅ th·ª±c v·∫≠t ƒë·ªôc h·∫°i
- T√¥n tr·ªçng vƒÉn h√≥a khi th·∫£o lu·∫≠n v·ªÅ truy·ªÅn th·ªëng hoa
"""